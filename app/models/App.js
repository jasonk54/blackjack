// Generated by CoffeeScript 1.4.0
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

window.App = (function(_super) {

  __extends(App, _super);

  function App() {
    return App.__super__.constructor.apply(this, arguments);
  }

  App.prototype.initialize = function() {
    var deck,
      _this = this;
    this.set('deck', deck = new Deck());
    this.set('playerHand', deck.dealPlayer());
    this.set('dealerHand', deck.dealDealer());
    return this.get('playerHand').on('stand', function() {
      _this.get('dealerHand').playThrough();
      return _this.result();
    });
  };

  App.prototype.result = function() {
    if (this.get('playerHand').scores() > 21 && this.get('dealerHand').scores() > 21) {
      console.log('Both bust');
      console.log('dealer: ', this.get('dealerHand').scores());
      return console.log('player: ', this.get('playerHand').scores());
    } else if (this.get('playerHand').scores() > 21 && this.get('dealerHand').scores() < 21) {
      console.log('Player bust');
      console.log('dealer: ', this.get('dealerHand').scores());
      return console.log('player: ', this.get('playerHand').scores());
    } else if (this.get('playerHand').scores() < 21 && this.get('dealerHand').scores() > 21) {
      console.log('Dealer bust');
      console.log('dealer: ', this.get('dealerHand').scores());
      return console.log('player: ', this.get('playerHand').scores());
    } else if (this.get('playerHand').scores() > this.get('dealerHand').scores()) {
      console.log('Player wins!');
      console.log('dealer: ', this.get('dealerHand').scores());
      return console.log('player: ', this.get('playerHand').scores());
    } else if (this.get('playerHand').scores() < this.get('dealerHand').scores()) {
      console.log('Dealer wins!');
      console.log('dealer: ', this.get('dealerHand').scores());
      return console.log('player: ', this.get('playerHand').scores());
    } else if (this.get('playerHand').scores() === 21 || this.get('dealerHand').scores() === 21) {
      console.log('BlackJack');
      console.log('dealer: ', this.get('dealerHand').scores());
      return console.log('player: ', this.get('playerHand').scores());
    } else {
      console.log('Tie');
      console.log('dealer: ', this.get('dealerHand').scores());
      return console.log('player: ', this.get('playerHand').scores());
    }
  };

  return App;

})(Backbone.Model);
